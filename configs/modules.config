ignore_errors{
                process{
                        errorStrategy="ignore"
                    }
    }
profiles{
    apptainer{
            apptainer{
                    enabled = true
            }
            process{
                    
                publishDir = [
                    path: { "${params.output_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
                withName: read_qc_fastp{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName: concatenate_files{
                    memory = '12 GB'
                    time = '10m'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }

                withName: 'download_files'{
                    time = '10h'
                    cpus=1
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }

                withName: 'get_sequences_from_sra'{
                    time = '10h'
                    cpus=1
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName: 'binning_with_metabat2'{
                    memory = '40 GB'
                    time = '5h'
                    cpus = 12
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }

                withName: 'get_coverage_for_metabat2'{
                    memory = '20 GB'
                    time = '5h'
                    cpus = 7
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }

                withName: 'assemble_with_megahit'{
                    memory = '100 GB'
                    time = '10h'
                    cpus = 32
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"index_bowtie2"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"align_bowtie2"{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
            withName:"bowtie2_to_sorted_bam"{
                    memory = '24 GB'
                    time = '10h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap1:amd64"
                    publishDir = [
                        path: { "${params.output_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename ->
                            if (params.keep_bam && filename.endsWith('.bam')) {
                                return filename  // Save .bam file if keep_bam is true
                            } else if (filename.endsWith('.bam') || filename.endsWith('.bt2')) {
                                return null // Do not publish .bam or .bt2 files by default
                            }
                            return filename // Save other files
                        }
                    ]
            }

                withName:"map_reads_fasta_pairs"{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }

                withName:"convert_sam_to_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"sort_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"convert_sam_to_sorted_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"get_unmapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"get_mapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"estimate_abundance_coverm"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap1:amd64"

                }
                withName:"find_genes_prodigal"{
                    memory = '12 GB'
                    time = '2h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap2:amd64"

                }

                withName:"profile_with_instrain"{
                    ext.args = {params.instrain_args}
                    memory = { 30.GB + 60.GB * task.attempt }
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '8h'
                    cpus = 10
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"compare_instrain_profiles"{
                    memory = '24 GB'
                    time = '1h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"make_stb_file_instrain"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"add_prefix_to_fasta"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"dereplicate_drep"{
                    memory = '300 GB'
                    time = '10h'
                    cpus = 20
                    container="docker://parsaghadermazi/roadmap3:amd64"
                    queue="amem"
                    clusterOptions = '--qos=mem'
                }
                withName:"estimate_abundance_sylph"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 8
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"estimate_abundance_sylph_SE"{
                    memory = { 15.GB + 30.GB * task.attempt }
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"estimate_abundance_metaphlan"{
                    memory = '40 GB'
                    time = '5h'
                    cpus = 13
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"merge_metaphlan_tables"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"calculate_diversity_metaphlan"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"download_sylph_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"download_humann_database"{
                    memory = '4 GB'
                    time = '20h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"download_metaphlan_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"compare_general_customized"{
                    memory = '20 GB'
                    time = '1h'
                    cpus = 7
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"get_customized_compared_comps"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap2:amd64"
                }
                withName:"download_kraken2_db"{
                    memory = '4 GB'
                    time = '10h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"classify_kraken2"{
                    memory = '300 GB'
                    time = '2h'
                    cpus = 20
                    container="docker://parsaghadermazi/roadmap6:amd64"
                    queue="amem"
                    clusterOptions = '--qos=mem'
                }
                withName:"estimate_abundance_bracken"{
                    memory = '20 GB'
                    time = '30m'
                    cpus = 5
                    container="docker://parsaghadermazi/roadmap6:amd64"
                } 

                withName:"download_humann_uniref90"{
                    memory = '10 GB'
                    time = '10h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }

                withName:"download_humann_chocophlan"{
                    memory = '10 GB'
                    time = '10h'
                    cpus = 4
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                withName:"profile_humann"{
                    memory = '80 GB'
                    time = '5h'
                    cpus = 20
                    container="docker://parsaghadermazi/roadmap6:amd64"
                }
                }
    }
    docker{
           docker{
            enabled = true
            }
           
           process{
                withName: read_qc_fastp{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"
                }
                withName: concatenate_files{
                    memory = '12 GB'
                    time = '10m'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }

                withName: 'download_files'{
                    time = '10h'
                    cpus=1
                    container="parsaghadermazi/roadmap1:amd64"

                }

                withName: 'get_sequences_from_sra'{
                    time = '10h'
                    cpus=1
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName: 'binning_with_metabat2'{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7
                    container="parsaghadermazi/roadmap1:amd64"

                }

                withName: 'get_coverage_for_metabat2'{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7
                    container="parsaghadermazi/roadmap1:amd64"

                }

                withName: 'assemble_with_megahit'{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"index_bowtie2"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"align_bowtie2"{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"map_reads_fasta_pairs"{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"bowtie2_to_sorted_bam"{
                    memory = '16 GB'
                    time = '10h'
                    cpus = 8
                    container="parsaghadermazi/roadmap1:amd64"
                    publishDir = [
                        path: { "${params.output_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename ->
                            if (params.keep_bam && filename.endsWith('.bam')) {
                                return filename  // Save .bam file if keep_bam is true
                            } else if (filename.endsWith('.bam') || filename.endsWith('.bt2')) {
                                return null // Do not publish .bam or .bt2 files by default
                            }
                            return filename // Save other files
                        }
                    ]
                }
                withName:"convert_sam_to_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"sort_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"convert_sam_to_sorted_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"get_unmapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"get_mapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap1:amd64"

                }
                withName:"profile_with_instrain"{
                    ext.args = {params.instrain_args}
                    memory = "12 GB"
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '8h'
                    cpus = 8
                    container="parsaghadermazi/roadmap2:amd64"
                }
                withName:"compare_instrain_profiles"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="parsaghadermazi/roadmap2:amd64"
                }
                withName:"make_stb_file_instrain"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="parsaghadermazi/roadmap2:amd64"
                }
                withName:"add_prefix_to_fasta"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="parsaghadermazi/roadmap2:amd64"
                }                
                withName:"find_genes_prodigal"{
                    memory = '12 GB'
                    time = '2h'
                    cpus = 4
                    container="parsaghadermazi/roadmap2:amd64"

                }
                withName:"dereplicate_drep"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                    container="parsaghadermazi/roadmap3:amd64"
                }
                withName:"estimate_abundance_sylph"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 8
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"estimate_abundance_sylph_SE"{
                    memory ='15.GB'
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '1h'
                    cpus = 4
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"estimate_abundance_metaphlan"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 8
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"merge_metaphlan_tables"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"calculate_diversity_metaphlan"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"download_sylph_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                    container="parsaghadermazi/roadmap6:amd64"
                }
                withName:"download_metaphlan_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                    container="parsaghadermazi/roadmap6:amd64"
                }
                }
    }
    local{       
           process{
                withName: read_qc_fastp{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4
                }
                withName: concatenate_files{
                    memory = '12 GB'
                    time = '10m'
                    cpus = 4

                }

                withName: 'download_files'{
                    time = '10h'
                    cpus=1

                }

                withName: 'get_sequences_from_sra'{
                    time = '10h'
                    cpus=1

                }
                withName: 'binning_with_metabat2'{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7

                }

                withName: 'get_coverage_for_metabat2'{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7

                }

                withName: 'assemble_with_megahit'{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8

                }
                withName:"index_bowtie2"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 7

                }
                withName:"align_bowtie2"{
                    memory = '15 GB'
                    time = '10h'
                    cpus = 8

                }
                withName:"bowtie2_to_sorted_bam"{
                    memory = '24 GB'
                    time = '10h'
                    cpus = 8
                    publishDir = [
                        path: { "${params.output_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename ->
                            if (params.keep_bam && filename.endsWith('.bam')) {
                                return filename  // Save .bam file if keep_bam is true
                            } else if (filename.endsWith('.bam') || filename.endsWith('.bt2')) {
                                return null // Do not publish .bam or .bt2 files by default
                            }
                            return filename // Save other files
                        }
                    ]
                }

                withName:"convert_sam_to_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4

                }
                withName:"sort_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4

                }
                withName:"convert_sam_to_sorted_bam"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4

                }
                withName:"get_unmapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4

                }
                withName:"get_mapped_reads"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 4

                }
                withName:"profile_with_instrain"{
                    ext.args = {params.instrain_args}
                    memory = { 30.GB + 60.GB * task.attempt }
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '8h'
                    cpus = 10
                }
                withName:"compare_instrain_profiles"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                }
                withName:"make_stb_file_instrain"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                }
                withName:"add_prefix_to_fasta"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                }
                withName:"find_genes_prodigal"{
                    memory = '12 GB'
                    time = '2h'
                    cpus = 4

                }
                withName:"dereplicate_drep"{
                    memory = '12 GB'
                    time = '1h'
                    cpus = 8
                }
                withName:"estimate_abundance_sylph"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 8
                }
                withName:"estimate_abundance_sylph_SE"{
                    memory = { 15.GB + 30.GB * task.attempt }
                    maxRetries = 2
                    errorStrategy = 'retry'
                    time = '1h'
                    cpus = 4
                }
                withName:"estimate_abundance_metaphlan"{
                    memory = '15 GB'
                    time = '5h'
                    cpus = 8
                }
                withName:"merge_metaphlan_tables"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                }
                withName:"calculate_diversity_metaphlan"{
                    memory = '4 GB'
                    time = '10m'
                    cpus = 4
                }
                withName:"download_sylph_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                }
                withName:"download_metaphlan_db"{
                    memory = '4 GB'
                    time = '5h'
                    cpus = 4
                }
                }
    }
    alpine
    {
        workDir = "/pl/active/olm-data3/nextflow_scratch"
        apptainer.libraryDir = "/pl/active/olm-data3/containers"
        process.executor ='slurm'
        process.queue = 'amilan'
        apptainer.pullTimeout="10h"
    }
    gutbot
    {
        workDir = "/pl/active/olm-data3/nextflow_scratch"
        apptainer.enabled = true
        apptainer.libraryDir = "/pl/active/olm-data3/containers"
        process.executor = 'local'
    }
    blanca
    {
        workDir = "/pl/active/olm-data3/nextflow_scratch"
        apptainer.enabled = true
        apptainer.libraryDir = "/pl/active/olm-data3/containers"
        process.executor ='slurm'
        process.queue = 'blanca-olm'
        process.clusterOptions = '--account=blanca-olm --qos=blanca-olm --reservation=olm'
        apptainer.pullTimeout="10h"
    }


}


